---

interface Quote {
  text: string;
  author: string;
}

const quotes: Quote[] = [
  {
    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',
    author: 'Cicero',
  },
  {
    text: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',
    author: 'Publilius Syrus',
  },
  {
    text: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',
    author: 'Seneca',
  },
  {
    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',
    author: 'Muhammad',
  },
  {
    text: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',
    author: 'Jesus',
  },
  {
    text: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',
    author: 'Saerom',
  },
  {
    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',
    author: 'Giraffe',
  },
];

---

<section class='quotes-section'>
  <div class='header'>What Tommy's Friends are Saying:</div>
  <div class='quotes-container'>
    {quotes.map((quote: Quote) =>
      <div class='quote-container'>
        <blockquote class='quote-text'>"{quote.text}"</blockquote>
        <cite class='quote-author'>- {quote.author}</cite>
      </div>
    )}
  </div>
</section>

<style>
  .quotes-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    background-color: var(--color-background-secondary);
    padding-top: 80px;
  }

  .header {
    font-size: 22px;
    width: var(--tommy-zugell-width);
    color: var(--color-accent-primary);
    font-family: 'Averia Serif Libre';
  }

  .quotes-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    width: var(--tommy-zugell-width);
    margin-top: 40px;
  }
  
  .quote-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    opacity: 0;
    background-color: #fff8e10f;
    padding: 24px 44px;
    border-radius: 8px;
  }

  .quote-text {
    font-size: 18px;
    margin-bottom: 6px;
  }

  .quote-author {
    font-size: 16px;
    font-weight: 600;
    margin-top: 4px;
  }

  .quotes-section.is-visible .quote-container:nth-child(1) {
    animation: fadeUp 1s forwards;
  }
  .quotes-section.is-visible .quote-container:nth-child(2) {
    animation: fadeUp 1s forwards 0.1s;
  }
  .quotes-section.is-visible .quote-container:nth-child(3) {
    animation: fadeUp 1s forwards 0.2s;
  }
  .quotes-section.is-visible .quote-container:nth-child(4) {
    animation: fadeUp 1s forwards;
  }
  .quotes-section.is-visible .quote-container:nth-child(5) {
    animation: fadeUp 1s forwards 0.1s;
  }
  .quotes-section.is-visible .quote-container:nth-child(6) {
    animation: fadeUp 1s forwards 0.3s;
  }
  .quotes-section.is-visible .quote-container:nth-child(7) {
    animation: fadeUp 1s forwards 0.4s;
  }
</style>

<script>
  import { setupIntersectionObserver } from '../scripts/intersection-observer.js';

  document.addEventListener('DOMContentLoaded', () => {
    const section = document.querySelector('.quotes-section');

    const observer = setupIntersectionObserver((target: Element) => {
      target.classList.add('is-visible');
    });

    if (section) {
      observer.observe(section);
    }
  });
</script>